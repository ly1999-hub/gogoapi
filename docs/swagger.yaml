basePath: /
definitions:
  apimodel.RoleCreate:
    properties:
      name:
        type: string
      permission:
        items:
          type: string
        type: array
    type: object
  apimodel.RoleUpdate:
    properties:
      name:
        type: string
      permission:
        items:
          type: string
        type: array
    type: object
  constant.Permission:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  model.UserStatistic:
    properties:
      totalCustomer:
        type: integer
      totalOrder:
        type: integer
      totalOrderCanceled:
        type: integer
      totalOrderCompleted:
        type: integer
      totalOrderDelivered:
        type: integer
      totalOrderDelivering:
        type: integer
      totalOrderPending:
        type: integer
      totalOrderWaitingApproved:
        type: integer
    type: object
  ptime.TimeResponse:
    properties:
      time:
        type: string
    type: object
  responsemodel.ResponseCreate:
    properties:
      id:
        type: string
    type: object
  responsemodel.ResponseList:
    properties:
      limit:
        type: integer
      list: {}
      total:
        type: integer
    type: object
  responsemodel.ResponseUpdate:
    properties:
      id:
        type: string
    type: object
  responsemodel.Role:
    properties:
      code:
        type: string
      createdAt:
        $ref: '#/definitions/ptime.TimeResponse'
      id:
        type: string
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/constant.Permission'
        type: array
      updatedAt:
        $ref: '#/definitions/ptime.TimeResponse'
    type: object
  responsemodel.RoleDetail:
    properties:
      role:
        $ref: '#/definitions/responsemodel.Role'
    type: object
  responsemodel.User:
    properties:
      _id:
        type: string
      avatar:
        type: string
      banned:
        type: boolean
      createdAt:
        $ref: '#/definitions/ptime.TimeResponse'
      email:
        description: unique
        type: string
      name:
        type: string
      phone:
        description: unique
        type: string
      statistic:
        $ref: '#/definitions/model.UserStatistic'
      updatedAt:
        $ref: '#/definitions/ptime.TimeResponse'
    type: object
  responsemodel.UserDetail:
    properties:
      user:
        $ref: '#/definitions/responsemodel.User'
    type: object
info:
  contact:
    email: dev@cashbag.vn
    name: Dev team
    url: https://selly.vn
  description: API for admin management.
  termsOfService: https://selly.vn
  title: GoGo - Admin API
  version: "1.0"
paths:
  /roles:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodel.ResponseList'
      tags:
      - Role
    post:
      consumes:
      - application/json
      operationId: role-create
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/apimodel.RoleCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodel.ResponseCreate'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - Role
  /roles/{id}:
    get:
      consumes:
      - application/json
      operationId: role-detail
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodel.RoleDetail'
      security:
      - ApiKeyAuth: []
      summary: Detail
      tags:
      - Role
    put:
      consumes:
      - application/json
      operationId: role-update
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: string
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/apimodel.RoleUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodel.ResponseUpdate'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - Role
  /users:
    get:
      consumes:
      - application/json
      operationId: user-all
      parameters:
      - in: query
        name: banned
        type: string
      - in: query
        name: fromAt
        type: string
      - in: query
        name: keyword
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: toAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodel.User'
      security:
      - ApiKeyAuth: []
      summary: All
      tags:
      - User
  /users/{id}:
    get:
      consumes:
      - application/json
      operationId: user-detail
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodel.UserDetail'
      security:
      - ApiKeyAuth: []
      summary: Detail
      tags:
      - User
  /users/{id}/banned:
    patch:
      consumes:
      - application/json
      operationId: user-banned
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodel.ResponseUpdate'
      security:
      - ApiKeyAuth: []
      summary: Banned
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
